From: Greg Kroah-Hartman <gregkh@suse.de>
Date: Thu, 26 Jan 2012 15:49:14 -0800
Subject: x86/mce: Convert static array of pointers to per-cpu variables

commit d6126ef5f31ca54980cb067af659a360dfcca037 upstream.

When I previously fixed up the mce_device code, I used a static array of
the pointers.  It was (rightfully) pointed out to me that I should be
using the per_cpu code instead.

This patch converts the code over to that structure, moving the variable
back into the per_cpu area, like it used to be for 3.2 and earlier.

Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com>
Link: https://lkml.org/lkml/2012/1/27/165
Signed-off-by: Tony Luck <tony.luck@intel.com>
---
 arch/x86/include/asm/mce.h           |    2 +-
 arch/x86/kernel/cpu/mcheck/mce.c     |    8 ++++----
 arch/x86/kernel/cpu/mcheck/mce_amd.c |    9 +++++----
 3 files changed, 10 insertions(+), 9 deletions(-)

Index: linux-3.2.46/arch/x86/include/asm/mce.h
===================================================================
--- linux-3.2.46.orig/arch/x86/include/asm/mce.h	2013-07-26 19:23:06.000000000 +0000
+++ linux-3.2.46/arch/x86/include/asm/mce.h	2013-07-26 19:23:07.000000000 +0000
@@ -149,7 +149,7 @@
 
 void mce_setup(struct mce *m);
 void mce_log(struct mce *m);
-extern struct device *mce_device[CONFIG_NR_CPUS];
+DECLARE_PER_CPU(struct device *, mce_device);
 
 /*
  * Maximum banks number.
Index: linux-3.2.46/arch/x86/kernel/cpu/mcheck/mce.c
===================================================================
--- linux-3.2.46.orig/arch/x86/kernel/cpu/mcheck/mce.c	2013-07-26 19:23:06.000000000 +0000
+++ linux-3.2.46/arch/x86/kernel/cpu/mcheck/mce.c	2013-07-26 19:23:07.000000000 +0000
@@ -1817,7 +1817,7 @@
 	.dev_name	= "machinecheck",
 };
 
-struct device *mce_device[CONFIG_NR_CPUS];
+DEFINE_PER_CPU(struct device *, mce_device);
 
 __cpuinitdata
 void (*threshold_cpu_callback)(unsigned long action, unsigned int cpu);
@@ -1996,7 +1996,7 @@
 			goto error2;
 	}
 	cpumask_set_cpu(cpu, mce_device_initialized);
-	mce_device[cpu] = dev;
+	per_cpu(mce_device, cpu) = dev;
 
 	return 0;
 error2:
@@ -2013,7 +2013,7 @@
 
 static __cpuinit void mce_device_remove(unsigned int cpu)
 {
-	struct device *dev = mce_device[cpu];
+	struct device *dev = per_cpu(mce_device, cpu);
 	int i;
 
 	if (!cpumask_test_cpu(cpu, mce_device_initialized))
@@ -2027,7 +2027,7 @@
 
 	device_unregister(dev);
 	cpumask_clear_cpu(cpu, mce_device_initialized);
-	mce_device[cpu] = NULL;
+	per_cpu(mce_device, cpu) = NULL;
 }
 
 /* Make sure there are no machine checks on offlined CPUs. */
Index: linux-3.2.46/arch/x86/kernel/cpu/mcheck/mce_amd.c
===================================================================
--- linux-3.2.46.orig/arch/x86/kernel/cpu/mcheck/mce_amd.c	2013-07-26 19:23:06.000000000 +0000
+++ linux-3.2.46/arch/x86/kernel/cpu/mcheck/mce_amd.c	2013-07-26 19:23:07.000000000 +0000
@@ -556,7 +556,7 @@
 {
 	int i, err = 0;
 	struct threshold_bank *b = NULL;
-	struct device *dev = mce_device[cpu];
+	struct device *dev = per_cpu(mce_device, cpu);
 	char name[32];
 
 	sprintf(name, "threshold_bank%i", bank);
@@ -620,7 +620,7 @@
 		if (i == cpu)
 			continue;
 
-		dev = mce_device[i];
+		dev = per_cpu(mce_device, i);
 		if (dev)
 			err = sysfs_create_link(&dev->kobj,b->kobj, name);
 		if (err)
@@ -700,7 +700,8 @@
 #ifdef CONFIG_SMP
 	/* sibling symlink */
 	if (shared_bank[bank] && b->blocks->cpu != cpu) {
-		sysfs_remove_link(&mce_device[cpu]->kobj, name);
+		dev = per_cpu(mce_device, cpu);
+		sysfs_remove_link(&dev->kobj, name);
 		per_cpu(threshold_banks, cpu)[bank] = NULL;
 
 		return;
@@ -712,7 +713,7 @@
 		if (i == cpu)
 			continue;
 
-		dev = mce_device[i];
+		dev = per_cpu(mce_device, i);
 		if (dev)
 			sysfs_remove_link(&dev->kobj, name);
 		per_cpu(threshold_banks, i)[bank] = NULL;
