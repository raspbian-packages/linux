From: Nicholas Bellinger <nab@linux-iscsi.org>
Date: Wed, 11 Jul 2012 21:22:16 +0000
Subject: [08/12] [SCSI] virtio-scsi: Add vdrv->scan for post
 VIRTIO_CONFIG_S_DRIVER_OK LUN scanning

commit 59057fbc37178f10a196ab7ec170b80273f75a47 upstream.

This patch changes virtio-scsi to use a new virtio_driver->scan() callback
so that scsi_scan_host() can be properly invoked once virtio_dev_probe() has
set add_status(dev, VIRTIO_CONFIG_S_DRIVER_OK) to signal active virtio-ring
operation, instead of from within virtscsi_probe().

This fixes a bug where SCSI LUN scanning for both virtio-scsi-raw and
virtio-scsi/tcm_vhost setups was happening before VIRTIO_CONFIG_S_DRIVER_OK
had been set, causing VIRTIO_SCSI_S_BAD_TARGET to occur.  This fixes a bug
with virtio-scsi/tcm_vhost where LUN scan was not detecting LUNs.

Tested with virtio-scsi-raw + virtio-scsi/tcm_vhost w/ IBLOCK on 3.5-rc2 code.

Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
Acked-by: Paolo Bonzini <pbonzini@redhat.com>
Signed-off-by: James Bottomley <JBottomley@Parallels.com>
[bwh: Backported to 3.2: adjust context]
---
 drivers/scsi/virtio_scsi.c |   15 ++++++++++++---
 drivers/virtio/virtio.c    |    5 ++++-
 include/linux/virtio.h     |    1 +
 3 files changed, 17 insertions(+), 4 deletions(-)

Index: linux-3.2.46/drivers/scsi/virtio_scsi.c
===================================================================
--- linux-3.2.46.orig/drivers/scsi/virtio_scsi.c	2013-07-26 19:27:49.000000000 +0000
+++ linux-3.2.46/drivers/scsi/virtio_scsi.c	2013-07-26 19:27:51.000000000 +0000
@@ -571,6 +571,13 @@
 	return tgt;
 }
 
+static void virtscsi_scan(struct virtio_device *vdev)
+{
+	struct Scsi_Host *shost = (struct Scsi_Host *)vdev->priv;
+
+	scsi_scan_host(shost);
+}
+
 static void virtscsi_remove_vqs(struct virtio_device *vdev)
 {
 	struct Scsi_Host *sh = virtio_scsi_host(vdev);
@@ -677,9 +684,10 @@
 	err = scsi_add_host(shost, &vdev->dev);
 	if (err)
 		goto scsi_add_host_failed;
-
-	scsi_scan_host(shost);
-
+	/*
+	 * scsi_scan_host() happens in virtscsi_scan() via virtio_driver->scan()
+	 * after VIRTIO_CONFIG_S_DRIVER_OK has been set..
+	 */
 	return 0;
 
 scsi_add_host_failed:
@@ -735,6 +743,7 @@
 	.driver.owner = THIS_MODULE,
 	.id_table = id_table,
 	.probe = virtscsi_probe,
+	.scan = virtscsi_scan,
 #if 0
 	.freeze = virtscsi_freeze,
 	.restore = virtscsi_restore,
Index: linux-3.2.46/drivers/virtio/virtio.c
===================================================================
--- linux-3.2.46.orig/drivers/virtio/virtio.c	2013-07-26 18:53:07.000000000 +0000
+++ linux-3.2.46/drivers/virtio/virtio.c	2013-07-26 19:27:51.000000000 +0000
@@ -140,8 +140,11 @@
 	err = drv->probe(dev);
 	if (err)
 		add_status(dev, VIRTIO_CONFIG_S_FAILED);
-	else
+	else {
 		add_status(dev, VIRTIO_CONFIG_S_DRIVER_OK);
+		if (drv->scan)
+			drv->scan(dev);
+	}
 
 	return err;
 }
Index: linux-3.2.46/include/linux/virtio.h
===================================================================
--- linux-3.2.46.orig/include/linux/virtio.h	2013-07-26 19:27:43.000000000 +0000
+++ linux-3.2.46/include/linux/virtio.h	2013-07-26 19:27:51.000000000 +0000
@@ -148,6 +148,7 @@
 	const unsigned int *feature_table;
 	unsigned int feature_table_size;
 	int (*probe)(struct virtio_device *dev);
+	void (*scan)(struct virtio_device *dev);
 	void (*remove)(struct virtio_device *dev);
 	void (*config_changed)(struct virtio_device *dev);
 };
