commit 55549f3998e7f8196dd6401933d895823a026ce5
Author: popcornmix <popcornmix@gmail.com>
Date:   Sat Sep 8 15:17:53 2012 +0100

    Avoid dynamic memory allocation for channel lock in USB driver. Thanks ddv2005.

Index: linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd.c
===================================================================
--- linux-3.2.46.orig/drivers/usb/host/dwc_otg/dwc_otg_hcd.c	2013-07-26 19:35:59.000000000 +0000
+++ linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd.c	2013-07-26 19:36:26.000000000 +0000
@@ -822,6 +822,7 @@
 	} else if (dwc_otg_hcd->status_buf != NULL) {
 		DWC_FREE(dwc_otg_hcd->status_buf);
 	}
+	DWC_SPINLOCK_FREE(dwc_otg_hcd->channel_lock);
 	DWC_SPINLOCK_FREE(dwc_otg_hcd->lock);
 	/* Set core_if's lock pointer to NULL */
 	dwc_otg_hcd->core_if->lock = NULL;
@@ -848,6 +849,7 @@
 	dwc_hc_t *channel;
 
 	hcd->lock = DWC_SPINLOCK_ALLOC();
+	hcd->channel_lock = DWC_SPINLOCK_ALLOC();
         DWC_DEBUGPL(DBG_HCDV, "init of HCD %p given core_if %p\n",
                     hcd, core_if);
 	if (!hcd->lock) {
@@ -1248,7 +1250,7 @@
 	dwc_otg_qh_t *qh;
 	int num_channels;
 	dwc_irqflags_t flags;
-	dwc_spinlock_t *channel_lock = DWC_SPINLOCK_ALLOC();
+	dwc_spinlock_t *channel_lock = hcd->channel_lock;
 	dwc_otg_transaction_type_e ret_val = DWC_OTG_TRANSACTION_NONE;
 
 #ifdef DEBUG_SOF
@@ -1348,8 +1350,6 @@
 #ifdef DEBUG_HOST_CHANNELS
 	last_sel_trans_num_avail_hc_at_end = hcd->available_host_channels;
 #endif /* DEBUG_HOST_CHANNELS */
-
-	DWC_SPINLOCK_FREE(channel_lock);
 	return ret_val;
 }
 
Index: linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd.h
===================================================================
--- linux-3.2.46.orig/drivers/usb/host/dwc_otg/dwc_otg_hcd.h	2013-07-26 19:35:59.000000000 +0000
+++ linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd.h	2013-07-26 19:36:26.000000000 +0000
@@ -548,7 +548,7 @@
 
 	/*  */
 	dwc_spinlock_t *lock;
-
+	dwc_spinlock_t *channel_lock;
 	/**
 	 * Private data that could be used by OS wrapper.
 	 */
Index: linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd_ddma.c
===================================================================
--- linux-3.2.46.orig/drivers/usb/host/dwc_otg/dwc_otg_hcd_ddma.c	2013-07-26 19:35:16.000000000 +0000
+++ linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd_ddma.c	2013-07-26 19:36:26.000000000 +0000
@@ -276,7 +276,7 @@
 static void release_channel_ddma(dwc_otg_hcd_t * hcd, dwc_otg_qh_t * qh)
 {
 	dwc_irqflags_t flags;
-	dwc_spinlock_t *channel_lock = DWC_SPINLOCK_ALLOC();
+	dwc_spinlock_t *channel_lock = hcd->channel_lock;
 
 	dwc_hc_t *hc = qh->channel;
 	if (dwc_qh_is_non_per(qh)) {
@@ -306,7 +306,6 @@
 		dwc_memset(qh->desc_list, 0x00,
 			   sizeof(dwc_otg_host_dma_desc_t) * max_desc_num(qh));
 	}
-	DWC_SPINLOCK_FREE(channel_lock);
 }
 
 /** 
Index: linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd_intr.c
===================================================================
--- linux-3.2.46.orig/drivers/usb/host/dwc_otg/dwc_otg_hcd_intr.c	2013-07-26 19:35:59.000000000 +0000
+++ linux-3.2.46/drivers/usb/host/dwc_otg/dwc_otg_hcd_intr.c	2013-07-26 19:36:26.000000000 +0000
@@ -922,7 +922,7 @@
 	dwc_otg_transaction_type_e tr_type;
 	int free_qtd;
 	dwc_irqflags_t flags;
-	dwc_spinlock_t *channel_lock = DWC_SPINLOCK_ALLOC();
+	dwc_spinlock_t *channel_lock = hcd->channel_lock;
 
 	DWC_DEBUGPL(DBG_HCDV, "  %s: channel %d, halt_status %d, xfer_len %d\n",
 		    __func__, hc->hc_num, halt_status, hc->xfer_len);
@@ -1009,7 +1009,6 @@
 	if (tr_type != DWC_OTG_TRANSACTION_NONE) {
 		dwc_otg_hcd_queue_transactions(hcd, tr_type);
 	}
-	DWC_SPINLOCK_FREE(channel_lock);
 }
 
 /**
