From: Daniel Wagner <wagi@monom.org>
Date: Thu, 7 Dec 2023 15:54:10 +0100
Subject: [PATCH 350/351] Revert "sched/rt: Provide migrate_disable/enable()
 inlines"
Origin: https://git.kernel.org/cgit/linux/kernel/git/rt/linux-stable-rt.git/commit?id=2d58a9d4c5c036f845b74b0c1dee8cca6eaa2df4

This reverts commit 56e8949825226341d28dd5156b3d0057684ff669.

The tree contains already the migrate_disable/enable() helpers thus this
stable backport conflicts (b) with the existing definition (compiler
complains with conflicting definition). Thus we don't need this
backported functions and can avoid the conflict by just dropping the
backport.

Signed-off-by: Daniel Wagner <wagi@monom.org>
---
 include/linux/preempt.h | 30 ------------------------------
 1 file changed, 30 deletions(-)

diff --git a/include/linux/preempt.h b/include/linux/preempt.h
index 29ecd13afdda..9c74a019bf57 100644
--- a/include/linux/preempt.h
+++ b/include/linux/preempt.h
@@ -422,34 +422,4 @@ static inline void preempt_notifier_init(struct preempt_notifier *notifier,
 
 #endif
 
-/**
- * migrate_disable - Prevent migration of the current task
- *
- * Maps to preempt_disable() which also disables preemption. Use
- * migrate_disable() to annotate that the intent is to prevent migration,
- * but not necessarily preemption.
- *
- * Can be invoked nested like preempt_disable() and needs the corresponding
- * number of migrate_enable() invocations.
- */
-static __always_inline void migrate_disable(void)
-{
-	preempt_disable();
-}
-
-/**
- * migrate_enable - Allow migration of the current task
- *
- * Counterpart to migrate_disable().
- *
- * As migrate_disable() can be invoked nested, only the outermost invocation
- * reenables migration.
- *
- * Currently mapped to preempt_enable().
- */
-static __always_inline void migrate_enable(void)
-{
-	preempt_enable();
-}
-
 #endif /* __LINUX_PREEMPT_H */
