From: Thomas Meyer <thomas@m3y3r.de>
Date: Sat, 12 Nov 2011 13:21:49 +0100
Subject: [PATCH 14/77] staging: hv: Use kmemdup rather than duplicating its
 implementation

commit 27b7923035f737a7e6384d0084e34706ea068040 upstream.

Use kmemdup rather than duplicating its implementation

The semantic patch that makes this change is available
in scripts/coccinelle/api/memdup.cocci.

Signed-off-by: Thomas Meyer <thomas@m3y3r.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/hv/hv_mouse.c |    4 +---
 drivers/staging/hv/netvsc.c   |   11 +++--------
 2 files changed, 4 insertions(+), 11 deletions(-)

Index: linux-3.2.46/drivers/staging/hv/hv_mouse.c
===================================================================
--- linux-3.2.46.orig/drivers/staging/hv/hv_mouse.c	2013-07-26 18:56:16.000000000 +0000
+++ linux-3.2.46/drivers/staging/hv/hv_mouse.c	2013-07-26 19:18:13.000000000 +0000
@@ -205,13 +205,11 @@
 	desc = &device_info->hid_descriptor;
 	WARN_ON(desc->bLength == 0);
 
-	input_device->hid_desc = kzalloc(desc->bLength, GFP_ATOMIC);
+	input_device->hid_desc = kmemdup(desc, desc->bLength, GFP_ATOMIC);
 
 	if (!input_device->hid_desc)
 		goto cleanup;
 
-	memcpy(input_device->hid_desc, desc, desc->bLength);
-
 	input_device->report_desc_size = desc->desc[0].wDescriptorLength;
 	if (input_device->report_desc_size == 0)
 		goto cleanup;
Index: linux-3.2.46/drivers/staging/hv/netvsc.c
===================================================================
--- linux-3.2.46.orig/drivers/staging/hv/netvsc.c	2013-07-26 18:56:16.000000000 +0000
+++ linux-3.2.46/drivers/staging/hv/netvsc.c	2013-07-26 19:18:13.000000000 +0000
@@ -230,19 +230,14 @@
 	net_device->recv_section_cnt = init_packet->msg.
 		v1_msg.send_recv_buf_complete.num_sections;
 
-	net_device->recv_section = kmalloc(net_device->recv_section_cnt
-		* sizeof(struct nvsp_1_receive_buffer_section), GFP_KERNEL);
+	net_device->recv_section = kmemdup(init_packet->msg.v1_msg.send_recv_buf_complete.sections,
+					   net_device->recv_section_cnt * sizeof(struct nvsp_1_receive_buffer_section),
+					   GFP_KERNEL);
 	if (net_device->recv_section == NULL) {
 		ret = -EINVAL;
 		goto cleanup;
 	}
 
-	memcpy(net_device->recv_section,
-		init_packet->msg.v1_msg.
-	       send_recv_buf_complete.sections,
-		net_device->recv_section_cnt *
-	       sizeof(struct nvsp_1_receive_buffer_section));
-
 	/*
 	 * For 1st release, there should only be 1 section that represents the
 	 * entire receive buffer
