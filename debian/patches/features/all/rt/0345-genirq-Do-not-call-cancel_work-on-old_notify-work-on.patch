From: Steven Rostedt <rostedt@goodmis.org>
Date: Fri, 15 Nov 2019 09:28:29 -0500
Subject: [PATCH 345/347] genirq: Do not call cancel_work on old_notify->work
 on PREEMPT_RT
Origin: https://git.kernel.org/cgit/linux/kernel/git/rt/linux-stable-rt.git/commit?id=0c2ab25919dafef33b0d49f8477ebf3a6032eed6

When PREEMPT_RT is configured, old_notify->work does not exist, and
instead swork is used. Unfortunately, there is no cancel_work() for
swork. This is a known bug, and 4.4 will just need to deal with it
as the real solution to this is to backport all the work queue code
from RT mainline.

Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
---
 kernel/irq/manage.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/kernel/irq/manage.c b/kernel/irq/manage.c
index 0d627e2c4cc0..f18b89016e5f 100644
--- a/kernel/irq/manage.c
+++ b/kernel/irq/manage.c
@@ -372,10 +372,9 @@ irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify *notify)
 	raw_spin_unlock_irqrestore(&desc->lock, flags);
 
 	if (old_notify) {
-		if (cancel_work_sync(&old_notify->work)) {
-			/* Pending work had a ref, put that one too */
-			kref_put(&old_notify->kref, old_notify->release);
-		}
+#ifndef CONFIG_PREEMPT_RT_BASE
+		cancel_work_sync(&old_notify->work);
+#endif
 		kref_put(&old_notify->kref, old_notify->release);
 	}
 
