From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 14 Jan 2018 21:32:45 +0000
Subject: proc: Fix ptrace mode in has_pid_permissions()
Forwarded: not-needed
Bug-Debian: https://bugs.debian.org/887106

Commit caaee6234d05 "ptrace: use fsuid, fsgid, effective creds for fs
access checks" added the requirement that all calls to
ptrace_may_access() include one of the PTRACE_MODE_{REAL,FS}CREDS
flags in the mode argument, and updated all callers to do this.
This was backported in 3.2.93.  For backward binary compatibility,
I added a patch to make these flags optional.

When I bumped the ABI version recently, I removed that patch, and it
turns out that there is one in-tree caller that wasn't updated -
has_pid_permissions().  This is was part of the backport of the procfs
hidepid feature and not included in 3.2-stable.  So update it
separately here.

---
--- a/fs/proc/base.c
+++ b/fs/proc/base.c
@@ -586,7 +586,7 @@ static bool has_pid_permissions(struct p
 		return true;
 	if (in_group_p(pid->pid_gid))
 		return true;
-	return ptrace_may_access(task, PTRACE_MODE_READ);
+	return ptrace_may_access(task, PTRACE_MODE_READ_FSCREDS);
 }
 
 
