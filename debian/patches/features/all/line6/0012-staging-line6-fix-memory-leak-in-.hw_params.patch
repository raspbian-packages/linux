From: Stefan Hajnoczi <stefanha@gmail.com>
Date: Sat, 10 Dec 2011 02:12:27 +0100
Subject: [012/106] staging: line6: fix memory leak in .hw_params()

commit 60c01a977814788178362ff0e1a22dfbf106eede upstream.

The .hw_params() pcm callback can be invoked multiple times in a row.
Ensure that the URB data buffer is only allocated once.

Signed-off-by: Stefan Hajnoczi <stefanha@gmail.com>
Signed-off-by: Markus Grabner <grabner@icg.tugraz.at>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/line6/capture.c  |    7 +++++--
 drivers/staging/line6/playback.c |    7 +++++--
 2 files changed, 10 insertions(+), 4 deletions(-)

Index: linux-3.2.46/drivers/staging/line6/capture.c
===================================================================
--- linux-3.2.46.orig/drivers/staging/line6/capture.c	2013-07-26 19:28:10.000000000 +0000
+++ linux-3.2.46/drivers/staging/line6/capture.c	2013-07-26 19:28:13.000000000 +0000
@@ -316,8 +316,11 @@
 	}
 	/* -- [FD] end */
 
-	line6pcm->buffer_in = kmalloc(LINE6_ISO_BUFFERS * LINE6_ISO_PACKETS *
-				      line6pcm->max_packet_size, GFP_KERNEL);
+	/* We may be invoked multiple times in a row so allocate once only */
+	if (!line6pcm->buffer_in)
+		line6pcm->buffer_in =
+			kmalloc(LINE6_ISO_BUFFERS * LINE6_ISO_PACKETS *
+				line6pcm->max_packet_size, GFP_KERNEL);
 
 	if (!line6pcm->buffer_in) {
 		dev_err(line6pcm->line6->ifcdev,
Index: linux-3.2.46/drivers/staging/line6/playback.c
===================================================================
--- linux-3.2.46.orig/drivers/staging/line6/playback.c	2013-07-26 19:28:10.000000000 +0000
+++ linux-3.2.46/drivers/staging/line6/playback.c	2013-07-26 19:28:13.000000000 +0000
@@ -462,8 +462,11 @@
 	}
 	/* -- [FD] end */
 
-	line6pcm->buffer_out = kmalloc(LINE6_ISO_BUFFERS * LINE6_ISO_PACKETS *
-				       line6pcm->max_packet_size, GFP_KERNEL);
+	/* We may be invoked multiple times in a row so allocate once only */
+	if (!line6pcm->buffer_out)
+		line6pcm->buffer_out =
+			kmalloc(LINE6_ISO_BUFFERS * LINE6_ISO_PACKETS *
+				line6pcm->max_packet_size, GFP_KERNEL);
 
 	if (!line6pcm->buffer_out) {
 		dev_err(line6pcm->line6->ifcdev,
