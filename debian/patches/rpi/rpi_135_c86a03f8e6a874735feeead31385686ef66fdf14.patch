commit c86a03f8e6a874735feeead31385686ef66fdf14
Author: popcornmix <popcornmix@gmail.com>
Date:   Wed May 2 22:13:14 2012 +0100

    Swap Red and Blue over in 32bpp framebuffer mode

Index: linux-3.2.46/drivers/video/bcm2708_fb.c
===================================================================
--- linux-3.2.46.orig/drivers/video/bcm2708_fb.c	2013-07-26 19:32:40.000000000 +0000
+++ linux-3.2.46/drivers/video/bcm2708_fb.c	2013-07-26 19:32:52.000000000 +0000
@@ -113,7 +113,12 @@
 	 * encoded in the pixel data.  Calculate their position from
 	 * the bitfield length defined above.
 	 */
-	if (ret == 0 && var->bits_per_pixel >= 16) {
+	if (ret == 0 && var->bits_per_pixel >= 24) {
+		var->red.offset = 0;
+		var->green.offset = var->red.offset + var->red.length;
+		var->blue.offset = var->green.offset + var->green.length;
+		var->transp.offset = var->blue.offset + var->blue.length;
+	} else if (ret == 0 && var->bits_per_pixel >= 16) {
 		var->blue.offset = 0;
 		var->green.offset = var->blue.offset + var->blue.length;
 		var->red.offset = var->green.offset + var->green.length;
@@ -312,6 +317,7 @@
 
 static int fbwidth = 800;	/* module parameter */
 static int fbheight = 480;	/* module parameter */
+static int fbdepth = 16;	/* module parameter */
 
 static int bcm2708_fb_register(struct bcm2708_fb *fb)
 {
@@ -346,7 +352,7 @@
 	fb->fb.var.yres = fbheight;
 	fb->fb.var.xres_virtual = fbwidth;
 	fb->fb.var.yres_virtual = fbheight;
-	fb->fb.var.bits_per_pixel = 16;
+	fb->fb.var.bits_per_pixel = fbdepth;
 	fb->fb.var.vmode = FB_VMODE_NONINTERLACED;
 	fb->fb.var.activate = FB_ACTIVATE_NOW;
 	fb->fb.var.nonstd = 0;
@@ -369,8 +375,8 @@
 
 	fb_set_var(&fb->fb, &fb->fb.var);
 
-	pr_info("BCM2708FB: registering framebuffer (%d, %d)\n", fbwidth,
-		fbheight);
+	pr_info("BCM2708FB: registering framebuffer (%dx%d@%d)\n", fbwidth,
+		fbheight, fbdepth);
 
 	ret = register_framebuffer(&fb->fb);
 	pr_info("BCM2708FB: register framebuffer (%d)\n", ret);
@@ -453,9 +459,11 @@
 
 module_param(fbwidth, int, 0644);
 module_param(fbheight, int, 0644);
+module_param(fbdepth, int, 0644);
 
 MODULE_DESCRIPTION("BCM2708 framebuffer driver");
 MODULE_LICENSE("GPL");
 
 MODULE_PARM_DESC(fbwidth, "Width of ARM Framebuffer");
 MODULE_PARM_DESC(fbheight, "Height of ARM Framebuffer");
+MODULE_PARM_DESC(fbdepth, "Bit depth of ARM Framebuffer");
