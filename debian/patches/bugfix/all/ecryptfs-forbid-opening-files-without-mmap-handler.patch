From: Jann Horn <jannh@google.com>
Date: Wed, 1 Jun 2016 11:55:06 +0200
Subject: ecryptfs: forbid opening files without mmap handler
Origin: https://git.kernel.org/linus/2f36db71009304b3f0b95afacd8eba1f9f046b87

This prevents users from triggering a stack overflow through a recursive
invocation of pagefault handling that involves mapping procfs files into
virtual memory.

Signed-off-by: Jann Horn <jannh@google.com>
Acked-by: Tyler Hicks <tyhicks@canonical.com>
Cc: stable@vger.kernel.org
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
[bwh: Backported to 3.2: There is more to clean up in
 ecryptfs_privileged_open(), so instead of changing labels and gotos
 skip the new check if rc != 0.]
---
--- a/fs/ecryptfs/kthread.c
+++ b/fs/ecryptfs/kthread.c
@@ -25,6 +25,7 @@
 #include <linux/slab.h>
 #include <linux/wait.h>
 #include <linux/mount.h>
+#include <linux/file.h>
 #include "ecryptfs_kernel.h"
 
 struct kmem_cache *ecryptfs_open_req_cache;
@@ -193,5 +194,10 @@ out_unlock:
 out_free:
 	kmem_cache_free(ecryptfs_open_req_cache, req);
 out:
+	if (rc == 0 && (*lower_file)->f_op->mmap == NULL) {
+		fput(*lower_file);
+		*lower_file = NULL;
+		rc = -EMEDIUMTYPE;
+	}
 	return rc;
 }
