From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 27 Nov 2017 15:02:15 +0000
Subject: sched: Avoid ABI change in 3.2.94
Forwarded: not-needed

The backport of commits e0e5070b20e0 "sched: add macros to define bitops
for task atomic flags" added a new field to struct task_struct which
will change ABI for most symbols in the kernel.

However, task_struct is always allocated by built-in code and the
new field is only accessed by built-in code.  So move it to the end and
hide it from genksyms.

---
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1315,8 +1315,6 @@ struct task_struct {
 	unsigned sched_reset_on_fork:1;
 	unsigned sched_contributes_to_load:1;
 
-	unsigned long atomic_flags; /* Flags needing atomic access. */
-
 	pid_t pid;
 	pid_t tgid;
 
@@ -1589,6 +1587,7 @@ struct task_struct {
 #endif
 #ifndef __GENKSYMS__
 	unsigned long rt_watchdog_stamp;
+	unsigned long atomic_flags; /* Flags needing atomic access. */
 #endif
 };
 
